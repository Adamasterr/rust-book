[[questions]]
id = "5ae11501-25d9-4b94-8e88-aa1c2122779f"
type = "MultipleChoice"
prompt.prompt = """
True/false: executing these two pieces of code results in the same value for `x`.

Snippet 1:
```
let x = if cond { 1 } else { 2 };
```

Snippet 2:
```
let x;
if cond {
  x = 1;
} else {
  x = 2;
}
```
"""
answer.answer = "True"
prompt.distractors = [ "False" ]
context = """
The first if-expression is a more concise way of representing the behavior of the second if-statement.
"""

[[questions]]
id = "4e07358c-b318-49cb-8210-fbed7ed50e23"
type = "Tracing"
prompt.program = """
fn main() {
  let x = true;
  let y = if x {};
  println!("{y:?}");
}
"""
answer.doesCompile = true
answer.stdout = "()"
context = """
An if-expression without an else-branch always returns the unit type, therefore `y` has the type and value of unit (or `()`).
"""