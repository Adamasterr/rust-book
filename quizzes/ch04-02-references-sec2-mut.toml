[[questions]]
type = "Tracing"
prompt.program = """
fn incr(n: &mut i32) {
  *n += 1;
}

fn main() {
  let mut n = 1;
  incr(&n);
  println!("{n}");
}
"""
answer.doesCompile = false
answer.lineNumber = 7
context = """
Although `n` is marked as `mut`, the reference to `n` must also be marked as `mut`. So a valid version of this program would say `incr(&mut n)`.
"""

[[questions]]
type = "Tracing"
prompt.program = """
fn main() {
  let mut s = String::from("hello");
  let s2 = &s;
  let s3 = &mut s;
  s3.push_str(" world");
  println!("{s2}");
}
"""
answer.doesCompile = false
answer.lineNumber = 6
context = """
It is illegal to use a mutable reference to a value (`s3`) while an immutable reference is live (`s2`).
"""