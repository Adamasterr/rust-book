[[questions]]
id = "f0ec64fa-262f-4819-8379-acad7aaf8be2"
type = "Tracing"
prompt.program = """
#[derive(Debug)]
struct Rectangle {
  width: u32,
  height: u32,
}

fn main() {
  let rect1 = Rectangle {
    width: 30,
    height: 50,
  };

  let a = area(rect1);
  println!("{:?} {}", rect1, a);
}

fn area(rectangle: Rectangle) -> u32 {
  rectangle.width * rectangle.height
}
"""
answer.doesCompile = false
answer.lineNumber = 14
context = """ 
`rect1` is moved by calling `area`, so it cannot be used on the next line.
"""

[[questions]]
id = "9ce4156e-4112-4101-a2c7-51758ceca639"
type = "MultipleChoice"
prompt.prompt = "Which statement best describes a difference between the `Display` and `Debug` traits?"
answer.answer = "`Display` is for cases where a value has a unique string representation, while `Debug` does not assume that"
prompt.distractors = [
  "`Display` is for printing values to the console, while `Debug` is for viewing values in a debugger",
  "`Display` cannot be implemented for structs, while `Debug` can be implemented for structs",
  "There is no difference, `Display` and `Debug` are aliases for the same trait."
]
